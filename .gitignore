# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files:
#  .idea/
#  *.iml
#  *.ipr
#  *.iws

# VS Code
.vscode/

# macOS
.DS_Store

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini

# Log files and directories
test_logs/
*.log
logs/

# AI analysis reports
# 中身だけ除外
report/*
# フォルダ自体は除外しない
!report/.gitkeep
# Added by add-autogen-gitignore.ps1 on 2025-09-03T15:56:24.9034225+09:00
.venv/
*.pyo
*.pyd
*.whl
.env.*
.vscode.bak.*
uv.lock
*.sqlite3
*.db
node_modules/

# Auto-generated entries
*.pyc
.ruff_cache/

# Auto-generated entries
.vscode/settings.json
.vscode/launch.json
.vscode/tasks.json

# Auto-generated entries from templates
$RECYCLE.BIN/
**/*.rs.bk
*.7z
*.backup
*.bak
*.lcov
*.orig
*.pdb
*.pid
*.pid.lock
*.rar
*.seed
*.sublime-project
*.sublime-workspace
*.swo
*.swp
*.tar.gz
*.temp
*.tgz
*.tmp
*.tsbuildinfo
*.zip
*~
.DS_Store?
.Spotlight-V100
.Trashes
._*
.cache/
.env.development.local
.env.local
.env.production.local
.env.test
.env.test.local
.eslintcache
.grunt
.idea/
.lock-wscript
.next
.node_repl_history
.npm
.nuxt
.nyc_output
.out
.parcel-cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/
.storybook-out
.yarn-integrity
/target/
Cargo.lock
bower_components
build/Release
coverage/
dist
jspm_packages/
lerna-debug.log*
npm-debug.log*
pids
public
requirements.txt
temp/
tmp/
yarn-debug.log*
yarn-error.log*

# Auto-generated entries from templates
*.vsix
.history/
.vscode/*.code-snippets
.vscode/extensions.json
