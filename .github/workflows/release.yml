name: Release Management

on:
  push:
    tags:
      - 'v*'

env:
  PYTHON_VERSION: "3.11"

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: |
          python -m build

      - name: Check package
        run: |
          twine check dist/*

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## üöÄ What's New in ${{ github.ref_name }}
            
            ### ‚ú® Features
            - Enhanced CI/CD pipeline
            - Improved code quality checks
            - Comprehensive security scanning
            - Automated dependency management
            
            ### üêõ Bug Fixes
            - Various improvements and optimizations
            
            ### üì¶ Installation
            
            ```bash
            pip install github-actions-ai-analyzer==${{ github.ref_name }}
            ```
            
            ### üìö Documentation
            
            For detailed documentation, visit our [GitHub repository](https://github.com/scottlz0310/Github-Actions-AI-Analyzer).
            
            ### ü§ù Contributing
            
            We welcome contributions! Please see our [Contributing Guide](CONTRIBUTING.md) for details.
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/github_actions_ai_analyzer-${{ github.ref_name }}.tar.gz
          asset_name: github_actions_ai_analyzer-${{ github.ref_name }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Wheel Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/github_actions_ai_analyzer-${{ github.ref_name }}-py3-none-any.whl
          asset_name: github_actions_ai_analyzer-${{ github.ref_name }}-py3-none-any.whl
          asset_content_type: application/zip

  notify:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: release
    if: always()
    steps:
      - name: Notify on success
        if: needs.release.result == 'success'
        run: |
          echo "‚úÖ Release ${{ github.ref_name }} created successfully!"
          echo "üì¶ Package available on PyPI"
          echo "üè∑Ô∏è  GitHub Release created"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify on failure
        if: needs.release.result == 'failure'
        run: |
          echo "‚ùå Release ${{ github.ref_name }} failed!"
          echo "Please check the logs for details."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 